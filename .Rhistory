write.table(mydata, "mydata.csv", quote = F, row.names = F, col.names = T, sep=",")
setwd("c:\\mydocs\\2019\\lectures/Rstat2019/")
mydata <- read.table("mydata.csv", sep=",", col.names=T)
mydata <- read.table("mydata.csv", sep=",", col.names=F)
dir()
mydata <- read.table("mydata.csv", sep=",")
head(mydata)
mydata <- read.table("mydata.csv", sep=",", header = T)
head(mydata)
mydata <- read.table("mydata.csv", sep=",", header = T)
ggplot(data=mydata, aes(x=sample_names, y=GFP))
library(ggplot2)
ggplot(data=mydata, aes(x=sample_names, y=GFP)) +
geom_bar()
ggplot(data=mydata, aes(x=sample_names, y=GFP)) +
geom_bar(stat="identity")
ggplot(data=mydata, aes(x=sample_names, y=GFP, fill=concentration)) +
geom_bar(stat="identity", position="dodge")
mydata2 <- mydata
mydata2$concentration <- as.factor(mydata2$concentration)
ggplot(data=mydata2, aes(x=sample_names, y=GFP, fill=concentration)) +
geom_bar(stat="identity", position="dodge")
ggplot(data=mydata2, aes(x=sample_names, y=GFP, fill=concentration)) +
geom_bar(stat="identity", position="dodge") +
scale_fill_manual(values = heat.colors(11))
ggplot(data=mydata2, aes(x=sample_names, y=GFP, fill=concentration)) +
geom_bar(stat="identity", position="dodge", color="black") +
scale_fill_manual(values = heat.colors(11))
library(ggplot2)
dat <- data.frame(x1=rnorm(100))
ggplot(data=dat)
ggplot(data=dat, aes(x=x1))
ggplot(data=dat, aes(x=x1)) +
geom_bar()
ggplot(data=dat, aes(x=x1)) +
geom_bar(stat="identity")
ggplot(data=dat, aes(y=x1)) +
geom_bar(stat="identity")
dat <- data.frame(x1=rnorm(100))
ggplot(dat, aes(x=x1)) +
geom_bar(stat="bin", bins=30)
x <- rnorm(10)
dat <- data.frame(x, y)
x <- rnorm(10)
y <- rnorm(10)
dat <- data.frame(x, y)
ggplot(data=dat)
ggplot(data=dat, aes(x=x, y=y)) +
geom_bar()
ggplot(data=dat, aes(y=x1)) +
geom_bar(stat="identity")
ggplot(data=dat, aes(x=x, y=y)) +
geom_bar(stat="identity")
x <- rnorm(100)
head(x)
class(x)
hist(x, br=10)
hist(x, br=100)
hist(x, br=10)
x <- sample(1:3, 100, replace = T)
head(x)
class(x)
count_x <- table(x)
count_x
barplot(count_x)
barplot(x)
barplot(count_x)
x <- rnorm(10)
y <- rnorm(10)
plot(x, y, type="h")
plot(x, y)
data.frame(x,y)
plot(x, y)
plot(x, y, type="h")
x <- 1:3
y <- table(sample(x, 100, replace = T))
y
x
y
barplot(x=x, y=y)
barplot(x=x, height=y)
barplot(y)
plot(x=x, y=y, type="h")
library(ggplot2)
x <- rnorm(10)
y <- rnorm(10)
dat <- data.frame(x, y)
ggplot(data=dat)
ggplot(data=dat, aes(x=x, y=y))
dat
ggplot(data=dat, aes(x=x, y=y)) +
geom_bar()
ggplot(data=dat, aes(x=x, y=y)) +
geom_bar(stat="identity")
?geom_bar
ggplot(data=dat, aes(x=x, y=y)) +
geom_bar(stat="identity")
dat <- data.frame(x1=rnorm(100))
ggplot(dat, aes(x=x1)) +
geom_bar(stat="bin", bins=30)
dat
barplot(dat$x1)
barplot(y=dat$x1)
barplot(x=1:length(dat$x1), y=dat$x1)
plot(x=1:length(dat$x1), y=dat$x1)
plot(x=1:length(dat$x1), y=dat$x1, type="h")
barplot(dat$x1)
plot(x=1:length(dat$x1), y=dat$x1, type="h")
ggplot(dat, aes(x=x1)) +
geom_bar(stat="bin", bins=30)
x <- sample(1:3, 100, replace = T)
x
dat <- data.frame(x=factor(x))
ggplot(dat, aes(x=x)) +
geom_bar(stat="count")
ggplot(x, aes(x=x)) +
geom_bar(stat="count")
ggplot(x) +
geom_bar(stat="count")
x <- rnorm(10)
y <- rnorm(10)
dat <- data.frame(x, y)
ggplot(dat, aes(x=x, y=y)) +
geom_bar(stat="identity")
x1 <- as.factor(1:3)
y1 <- tabulate(sample(x1, 100, replace=T))
dat <- data.frame(x1, y1)
ggplot(dat, aes(x=x1, y=y1)) +
geom_bar(stat="identity")
x1 <- as.factor(1:3)
y1 <- tabulate(sample(x1, 100, replace=T))
dat <- data.frame(x1, y1)
ggplot(dat, aes(x=x1, y=y1, fill=x1)) +
geom_bar(stat="identity") +
guides(fill=FALSE) +
xlab("Discrete cases") +
ylab("Value") +
ylim(c(0,50))+
ggtitle("Bar graph for x:discrete and y:value")
Cars93
library(UsingR)
str(Cars93)
tmp <- Cars93 %>% select(Price, Horsepower)
library(dplyr)
tmp <- Cars93 %>% select(Price, Horsepower)
head(tmp)
str(tmp)
plot(tmp)
ggplot(Cars93, aes(x=Price, y=Horsepower)) +
geom_point()
plot(Cars93$Price, Cars93$Horsepower)
ggplot(Cars93, aes(x=Price, y=Horsepower)) +
geom_point()
str(Cars93)
plot(Cars93$Price, Cars93$Horsepower)
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type)
Cars93$Type
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type)
legend(x=1, y=300, legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type)
legend(x=1, y=300, legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type); legend(x=1, y=300, legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type); legend(x=10, y=300, legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=Cars93$Type); legend(x=10, y=300, col =Cars93$Type,  legend = levels(Cars93$Type))
Cars93$Type
plot(Cars93$Price, Cars93$Horsepower, col=c("black", "red", "blue", "red", "yellow", "brown")); legend(x=10, y=300, col =Cars93$Type,  legend = levels(Cars93$Type))
mycol <- c("black", "red", "blue", "red", "yellow", "brown")
plot(Cars93$Price, Cars93$Horsepower, col=mycol); legend(x=10, y=300, col =Cars93$Type,  legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=mycol); legend(x=10, y=300, col =Cars93$Type,  legend = levels(Cars93$Type))
levels(Cars93$Type)
mydat <- data.frame(Cars93$Price, Cars93$Horsepower)
head(mydat)
mydat <- data.frame(Cars93$Price, Cars93$Horsepower, Cars93$Type)
mydat <- data.frame(Cars93$Price, Cars93$Horsepower, Cars93$Type)
head(mydat)
mycol2 <- Cars93$Type
mycol2
levels(mycol2)
levels(mycol2) <- mycol
mycol2
mycol3 <- as.character(mycol2)
mycol3
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300,  legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300, col=levels(mycol2), legend = levels(Cars93$Type))
levels(mycol2)
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300, pch=2, col=levels(mycol2), legend = levels(Cars93$Type))
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300, pch=19, col=levels(mycol2), legend = levels(Cars93$Type))
?pch
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300, pch=19, col=levels(mycol2), legend = levels(Cars93$Type))
ggplot(Cars93, aes(x=Price, y=Horsepower, fill=Type)) +
geom_point()
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point()
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
facet_wrap(.~Type, nrow=2)
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_boxplot() +
facet_wrap(.~Type, nrow=2)
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_boxplot()
str(Cars93)
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
facet_wrap(.~Type, nrow=2)
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
geom_smooth() +
facet_wrap(.~Type, nrow=2)
Cars93 %>% ggplot(aes(x=Weight, y=MPG.highway)) + geom_point()
p <- Cars93 %>% ggplot(aes(x=Weight, y=MPG.highway)) + geom_point()
p
p + geom_smooth()
p <- Cars93 %>% ggplot(aes(x=Weight, y=MPG.highway)) + geom_point()
p <- p + geom_smooth()
p + facet_grid(.~type)
p + facet_grid(.~Type)
p + facet_grid(~Type)
p + facet_grid(~Type)
p + facet_grid(~Type, nrow=2)
p + facet_wrap(~Type, nrow=2)
head(Cars93)
strCars93)
str(Cars93)
ggplot(Cars93, aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = Price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue"))
ggplot(Cars93, aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = Price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
ggplot(Cars93, aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = log(Price)), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% trasform(rescale = rescale(Price)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% transform(rescale = rescale(Price)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% transform(rescale = scale(Price)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% transform(rescale = log(scale(Price))) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
str(Cars93)
Cars93 %>% transform(rescale_price = scale(RPM)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% transform(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
str(Cars93)
Cars93 %>% transform(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% mutant(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% mutate(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
Cars93 %>% mutate(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white")
Cars93 %>% mutate(rescale_price = scale(Horsepower)) %>%
ggplot(aes(x=Model, y=Manufacturer)) +
geom_tile(aes(fill = rescale_price), colour = "white") +
scale_fill_gradient(low = "white", high = "steelblue")
smoke <- survey$Smoke
m
smoke <- survey$Smoke
smoke
table(smoke)
table(smoke)/length(smoke)
#fx <- function(x, lambda){((lambda^x)*exp(-lambda))/factorial(x)}
fx <- function(x, lambda){lambda*exp(-lambda*x)}
x <- seq(-1, 5, 0.01)
y <- fx(x, 1)
plot(x=x, y=y);
plot(x=x, y=y, type="l"); polygon(x=c(1,0,seq(0,1,0.01)), y=c(0, 0, fx(seq(0,1,0.01),1)), col="red")
(4451+53)/(4451+53+49+272)
53/(272+53)
4451/(4451+49)
53/(272+53)
sum(sample(1:6, size = 100)*1/6)
sum(sample(1:6, size = 100, replace=T)*1/6)
sum(sample(1:6, size = 100, replace=T)*(1/6))
sample(1:6, size = 100, replace=T)
x <- sample(1:6, size = 100, replace=T)
table(x)
table(x)/length(x)
1:6*(table(x)/length(x))
(1:6*(table(x)/length(x)))
sum(1:6*(table(x)/length(x)))
x <- sample(1:6, size = 1000, replace=T)
sum(1:6*(table(x)/length(x)))
str(Cars93)
library(UsingR)
str(Cars93)
Cars93 %>% select(Price, EngineSize, Horsepower, Length, Wheelbase, Width, Luggage.room, Weight)
library(dplyr)
Cars93 %>% select(Price, EngineSize, Horsepower, Length, Wheelbase, Width, Luggage.room, Weight)
Cars93 %>% select(Price, EngineSize, Horsepower, Length, Wheelbase, Width, Luggage.room, Weight) %>% head(30)
mydata <- Cars93 %>% select(Price, EngineSize, Horsepower, Length, Wheelbase, Width, Luggage.room, Weight) %>% head(30)
mydata %>% complete.cases
mydata %>% filter(complete.cases)
mydata %>% filter(complete.cases(.))
mydata <- Cars93 %>% select(Price, EngineSize, Horsepower, Length, Wheelbase, Width, Luggage.room, Weight)
mydata %>% filter(complete.cases(.))
?arrange
mydata %>% filter(complete.cases(.)) %>% arrange(Price)
mydata %>% filter(complete.cases(.)) %>% arrange(desc(Price))
?desc
mydata <- mydata %>% filter(complete.cases(.)) %>% arrange(desc(Price)) %>% head(30)
mydata
```{r, eval=F, echo=F}
tmp <- Cars93 %>% select(Price, Horsepower)
head(tmp)
str(tmp)
mycol <- c("black", "red", "blue", "red", "yellow", "brown")
head(mydat)
mycol <- c("black", "red", "blue", "red", "yellow", "brown")
mydat <- data.frame(Cars93$Price, Cars93$Horsepower, Cars93$Type)
head(mydat)
mycol2 <- Cars93$Type
levels(mycol2) <- mycol
mycol3 <- as.character(mycol2)
plot(Cars93$Price, Cars93$Horsepower, col=mycol3); legend(x=10, y=300, pch=19, col=levels(mycol2), legend = levels(Cars93$Type))
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_boxplot()
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point()
mycol <- c("black", "red", "blue", "red", "yellow", "brown")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_color_manual(values=mycol)
?scale_fill_brewer
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_fill_brewer(palette="Set1")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_fill_brewer()
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_fill_brewer(palette="Set1")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_fill_brewer(palette="Spectral")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_color_manual(scale_fill_brewer(palette="Spectral"))
scale_fill_brewer(palette="Spectral")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_color_brewer(palette="Spectral")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_boxplot() +
scale_fill_brewer(palette="Spectral")
ggplot(Cars93, aes(x=Price, y=Horsepower, fill=Type)) +
geom_boxplot() +
scale_fill_brewer(palette="Spectral")
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() #+
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_color_manual(values=mycol)
ggplot(Cars93, aes(x=Price, y=Horsepower, fill=Type)) +
geom_boxplot()# +
ggplot(Cars93, aes(x=Price, y=Horsepower, fill=Type)) +
geom_boxplot() +
scale_fill_brewer(palette="Spectral")
?scale_fill_brewer
ggplot(Cars93, aes(x=Price, y=Horsepower, color=Type)) +
geom_point() +
scale_color_brewer(palette="PuBu")
class(Car93)
class(Cars93)
class(Cars93$Model)
is.numeric(Cars93$Model)
Cars93 %>% select(is.numeric(.))
names(Cars93)
Cars93 %>% lapply(is.numeric)
Cars93 %>% lapply(is.numeric) %>% unlist
idx <- Cars93 %>% lapply(is.numeric) %>% unlist
Cars93 %>% select(idx)
idx
Cars93 %>% select(idx==T)
idx
class(idx)
which(idx)
?select
str(Cars93)
idx <- Cars93 %>% lapply(is.numeric) %>% unlist
idx
which(idx==T)
names(which(idx==T))
Cars93 %>% select(names(which(idx==T)))
mydata <- Cars93 %>% select_if(is.numeric)
head(mydata)
complete.cases(mydata)
mydata <- Cars93 %>% select_if(is.numeric) %>% filer(complete.cases(.))
mydata <- Cars93 %>% select_if(is.numeric) %>% filter(complete.cases(.))
head(mydata)
?desc
mydata <- Cars93 %>% select_if(is.numeric) %>%
filter(complete.cases(.)) %>% arrange(desc(Price))
head(mydata)
mydata <- Cars93 %>% select_if(is.numeric) %>%
filter(complete.cases(.)) %>%
arrange(desc(Price)) %>%
head(30)
mydata
str(mydata)
library(reshape2)
mydata.mlt <- melt(mydata)
head(mydata.mlt)
?melt
class(mydata)
mydata.mlt <- melt(mydata, id.vars = "Price")
head(mydata.mlt)
mydata.mlt <- melt(mydata, id.vars = "Price")
ggplot(mydata, aes(x=variable, y=Price, fill=value)) +
geom_tile()
ggplot(mydata.mlt, aes(x=variable, y=Price, fill=value)) +
geom_tile()
x <- 1:6
x
xp <- rep(1/6, 6)
xp
x*xp
sum(x*xp)
x <- sample(1:6, size = 10, replace=T)
x
mean(x)
x <- sample(1:6, size = 100, replace=T)
mean(x)
n <- 1:1000
n <- 1000
n <- 1000
barx <- rep(0, n)
plot(barx)
n <- 1000
barx <- rep(0, n)
for(i in 1:n){
x <- sample(1:6, size = i, replace=T)
barx[i] <- mean(x)
}
plot(barx)
(2/5)*(3/5)
9/25
4/25
sum(x*xp)
x <- c(0, 1, 2)
xp <- c(0.36, 0.48, 0.16)
ex <- sum(x*xp)
ex
x <- 1:3
x <- 1:3
xp <- rep(1/3, 3)
sum(x*sp)
x <- 1:3
xp <- rep(1/3, 3)
sum(x*xp)
sum(x^2*xp) - (sum(x*xp))^2
ex <- sum(x*xp)
vx <- sum(x^2*xp) - (sum(x*xp))^2
c(ex, vx)
seq(1:3, times=3)
seq(1, 3, times=3)
seq(1, 3, 3)
seq(1, 3, length.out = 3)
seq(1, 3, length.out = 9)
seq(1, 3, length.out = 10)
rep(1:3, times=3)
rep(1:3)
?rep
rep(1:3, each=3)
data.frame(rep(1:3, times=3), rep(1:3, each=3))
data.frame(x1=rep(1:3, times=3), x2=rep(1:3, each=3))
xp <- rep(1/9, nrow(x))
x <- data.frame(x1=rep(1:3, times=3), x2=rep(1:3, each=3))
xp <- rep(1/9, nrow(x))
xp
ex <- sum(x*xp)
ex
vx <- sum(x^2*xp) - (sum(x*xp))^2
vx <- sum(x^2*xp) - (sum(x*xp))^2
c(ex, vx)
x <- data.frame(x1=rep(1:3, times=3), x2=rep(1:3, each=3))
x
(x*1/3)
xx <- (x*1/3)
xx[,1] * xx[,2]
sum(xx[,1] * xx[,2])
x <- data.frame(x1=rep(1:3, times=3), x2=rep(1:3, each=3))
xx <- (x*1/3)
xp <- sum(xx[,1] * xx[,2])
xp
x <- 10
install.packages("reticulate")
library(reticulate)
